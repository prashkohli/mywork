#include <stdio.h>

// Student structure
typedef struct {
    char student_name[50];
    int student_roll_no;
    float total_marks;
} Student;

// Function to heapify the array
void heapify(Student a[], int n, int i, int *swapCount) {
    int largest = i;
    int l = 2 * i + 1;
    int r = 2 * i + 2;

    // Check if left child exists and is greater than the largest
    if (l < n && a[l].student_roll_no > a[largest].student_roll_no) {
        largest = l;
    }

    // Check if right child exists and is greater than the largest
    if (r < n && a[r].student_roll_no > a[largest].student_roll_no) {
        largest = r;
    }

    // If the largest is not the root
    if (largest != i) {
        // Swap the elements
        Student temp = a[i];
        a[i] = a[largest];
        a[largest] = temp;
        (*swapCount)++;
        // Recursively heapify the affected subtree
        heapify(a, n, largest, swapCount);
    }
}

// Function to build a heap
void buildheap(Student a[], int n, int *swapCount) {
    // Build heap (rearrange array)
    for (int i = n / 2 - 1; i >= 0; i--) {
        heapify(a, n, i, swapCount);
    }
}

// Function to perform Heap Sort
void heapSort(Student a[], int n, int *swapCount) {
    // Build the heap
    buildheap(a, n, swapCount);

    // One by one extract an element from the heap
    for (int i = n - 1; i > 0; i--) {
        // Move the current root to the end
        Student temp = a[0];
        a[0] = a[i];
        a[i] = temp;
        (*swapCount)++;
        // Call max heapify on the reduced heap
        heapify(a, i, 0, swapCount);
    }
}

int main() {
    int n;
    printf("Enter the number of students: ");
    scanf("%d", &n);

    // Array of Student structures
    Student students[n];

    // Input Student details
    for (int i = 0; i < n; i++) {
        printf("Enter student name: ");
        scanf("%s", students[i].student_name);
        printf("Enter student roll number: ");
        scanf("%d", &students[i].student_roll_no);
        printf("Enter total marks: ");
        scanf("%f", &students[i].total_marks);
    }

    int swapCount = 0; // Initialize swap count
    heapSort(students, n, &swapCount);

    // Output sorted Student details
    printf("Sorted Student details based on roll number:\n");
    for (int i = 0; i < n; i++) {
        printf("Name: %s, Roll No: %d, Total Marks: %.2f\n", students[i].student_name, students[i].student_roll_no, students[i].total_marks);
    }
    printf("Number of swaps performed: %d\n", swapCount);

    return 0;
}
