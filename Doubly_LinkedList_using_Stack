#include <stdio.h>
#include <stdlib.h>

// Node structure for doubly linked list
struct Node {
    int data;
    struct Node* prev;
    struct Node* next;
};

struct Node* top = NULL; // Global variable to store the top of the stack

// Function to push an element onto the stack
void push(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->prev = NULL;
    newNode->next = top;

    if (top != NULL) {
        top->prev = newNode;
    }

    top = newNode;
    printf("%d pushed to stack.\n", data);
}

// Function to pop an element from the stack
int pop() {
    if (top == NULL) {
        printf("Stack is empty.\n");
        return -1;
    }

    int popped = top->data;
    struct Node* temp = top;
    top = top->next;

    if (top != NULL) {
        top->prev = NULL;
    }

    free(temp);
    return popped;
}

// Function to display the stack
void display() {
    struct Node* temp = top;
    printf("Stack: ");
    while (temp != NULL) {
        printf("%d ", temp->data);
        temp = temp->next;
    }
    printf("\n");
}

int main() {
    push(10);
    push(20);
    push(30);
    display();

    printf("%d popped from stack.\n", pop());
    display();

    return 0;
}
